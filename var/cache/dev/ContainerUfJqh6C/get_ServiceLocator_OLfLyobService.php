<?php

namespace ContainerUfJqh6C;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_ServiceLocator_OLfLyobService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator.oLfLyob' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.oLfLyob'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService, [
            'eventCategoryRepository' => ['privates', '.errored.BdKR0TN', NULL, 'Cannot determine controller argument for "App\\Controller\\EventController::newAlmacen()": the $eventCategoryRepository argument is type-hinted with the non-existent class or interface: "App\\Controller\\EventCategoryRepository". Did you forget to add a use statement?'],
            'eventRepository' => ['privates', 'App\\Repository\\EventRepository', 'getEventRepositoryService', true],
            'taskRepository' => ['privates', 'App\\Repository\\TaskRepository', 'getTaskRepositoryService', true],
        ], [
            'eventCategoryRepository' => '?',
            'eventRepository' => 'App\\Repository\\EventRepository',
            'taskRepository' => 'App\\Repository\\TaskRepository',
        ]);
    }
}
